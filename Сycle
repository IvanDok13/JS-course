                                                                            //While                                                
const printNumbers = (lastNumber) => {
  // i â€“ index 
  let i = 1;

  while (i <= lastNumber) {
    console.log(i);
    i += 1; //i = i + 1 
  }
  console.log('finished!');
};

printNumbers(3);
// => 1
// => 2
// => 3
// => finished!


//Modify the printNumbers() function to print numbers in reverse order
const printNumbers = (initialNumber) => {
  var i = initialNumber;
  while (i >= 1) {
    console.log(i);
    i --;
  }
  console.log('finished!');
};

printNumbers(0); //'finished!'
printNumbers(2); //'2,1, finished!'
printNumbers(7); // '7, 6, 5, 4, 3, 2, 1, finished!'
printNumbers(-5); //'finished!'

                                                             // Multiply cycle for range
const multiplyNumbersFromRange = (start, finish) => {
  let i = start;
  let multiply = 1;
  while (i <= finish) {
    multiply *= i;
    i += 1;
  }
  return multiply;
}
console.log(multiplyNumbersFromRange(3, 5)); // 60



//Implement the joinNumbersFromRange() function, which joins all numbers in a range into a string and returns it:
const joinNumbersFromRange = (start, finish) => {
  let i = start;
  let joinNumbers = '';

  while (i <= finish) {
    joinNumbers = `${joinNumbers}${i}`;
    i += 1;
  }
  return joinNumbers;
}

console.log(joinNumbersFromRange(-3, 5)) //-3-2-1012345
